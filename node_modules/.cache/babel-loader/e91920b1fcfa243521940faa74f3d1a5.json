{"ast":null,"code":"import Axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport { history } from '../../Util/history';\nimport { PERSONAL_INFO, SIGN_IN, USER_LIST, USER_UPDATE } from \"../Const/MovieManagerConst\";\nconst token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0ZW5Mb3AiOiJCb290Y2FtcCAxNSIsIkhldEhhblN0cmluZyI6IjIwLzA2LzIwMjIiLCJIZXRIYW5UaW1lIjoiMTY1NTY4MzIwMDAwMCIsIm5iZiI6MTYyNjI4MjAwMCwiZXhwIjoxNjU1ODMwODAwfQ.p47FFJpArherjwlM71xTzdulAQIW37pR6fRGD3t3Ji0';\nexport const signInAction = accounts => {\n  return async dispatch => {\n    try {\n      let result = await Axios({\n        url: 'https://movienew.cybersoft.edu.vn/api/QuanLyNguoiDung/DangNhap',\n        method: 'POST',\n        data: accounts,\n        headers: {\n          TokenCybersoft: token\n        }\n      });\n      localStorage.setItem(\"USER_SIGNIN\", JSON.stringify(result.data.content));\n      localStorage.setItem(\"ACCESSTOKEN\", result.data.content.accessToken);\n      Swal.fire('Thông báo', 'Đăng nhập thành công', 'success');\n      dispatch({\n        type: SIGN_IN,\n        userSignIn: result.data.content\n      });\n\n      if (result.data.content.maLoaiNguoiDung === 'QuanTri') {\n        history.push('/admin');\n      } else {\n        history.push('/');\n      }\n    } catch (err) {\n      Swal.fire('Thông báo', 'Tài khoản hoặc mật khẩu không đúng', 'error');\n    }\n  };\n};\nexport const signUpAction = accounts => {\n  return async () => {\n    try {\n      await Axios({\n        url: 'https://movienew.cybersoft.edu.vn/api/QuanLyNguoiDung/DangKy',\n        method: 'POST',\n        data: accounts,\n        headers: {\n          TokenCybersoft: token\n        }\n      }).then(result => {\n        Swal.fire('Thông báo', 'Đăng ký thành công', 'success');\n        history.push('/dangnhap');\n      });\n    } catch (error) {\n      Swal.fire('Thông báo', 'Đăng ký thất bại', 'error');\n    }\n  };\n};\nexport const getUserList = () => {\n  return async dispatch => {\n    try {\n      let result = await Axios({\n        url: 'https://movienew.cybersoft.edu.vn/api/QuanLyNguoiDung/LayDanhSachNguoiDung?MaNhom=GP01',\n        method: 'GET',\n        headers: {\n          TokenCybersoft: token\n        }\n      });\n      dispatch({\n        type: USER_LIST,\n        userList: result.data.content\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const deleteUser = account => {\n  return async dispatch => {\n    try {\n      await Axios({\n        url: `https://movienew.cybersoft.edu.vn/api/QuanLyNguoiDung/XoaNguoiDung?TaiKhoan=${account}`,\n        method: 'DELETE',\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem(\"ACCESSTOKEN\"),\n          TokenCybersoft: token\n        }\n      });\n      dispatch(getUserList());\n      Swal.fire('Thông báo', 'Xóa thành công', 'success');\n    } catch (error) {\n      Swal.fire('Thông báo', 'Xóa thất bại', 'error');\n      console.log(error);\n    }\n  };\n};\nexport const addUser = formUser => {\n  return async dispatch => {\n    try {\n      await Axios({\n        url: 'https://movienew.cybersoft.edu.vn/api/QuanLyNguoiDung/ThemNguoiDung',\n        method: 'POST',\n        data: formUser,\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem(\"ACCESSTOKEN\"),\n          TokenCybersoft: token\n        }\n      });\n      dispatch(getUserList());\n      Swal.fire('Thông báo', 'Thêm thành công', 'success');\n    } catch (error) {\n      Swal.fire('Thông báo', 'Thêm thất bại', 'error');\n      console.log(error);\n    }\n  };\n};\nexport const getUserUpdate = user => {\n  return async dispatch => {\n    try {\n      await Axios({\n        url: `https://movienew.cybersoft.edu.vn/api/QuanLyNguoiDung/LayThongTinNguoiDung?taiKhoan=${user}`,\n        method: 'POST',\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem(\"ACCESSTOKEN\"),\n          TokenCybersoft: token\n        }\n      }).then(result => {\n        dispatch({\n          type: USER_UPDATE,\n          userUpdate: result.data.content\n        });\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const updateUser = formUser => {\n  return async dispatch => {\n    try {\n      await Axios({\n        url: 'https://movienew.cybersoft.edu.vn/api/QuanLyNguoiDung/CapNhatThongTinNguoiDung',\n        method: 'POST',\n        data: formUser,\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem(\"ACCESSTOKEN\"),\n          TokenCybersoft: token\n        }\n      });\n      dispatch(getUserList());\n      Swal.fire('Thông báo', 'Cập nhật thành công', 'success');\n    } catch (error) {\n      Swal.fire('Thông báo', 'Cập nhật thất bại', 'error');\n      console.log(error);\n    }\n  };\n};\nexport const getPersonalInfo = () => {\n  return async dispatch => {\n    try {\n      let result = await Axios({\n        url: 'https://movienew.cybersoft.edu.vn/api/QuanLyNguoiDung/ThongTinTaiKhoan',\n        method: 'POST',\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem(\"ACCESSTOKEN\"),\n          TokenCybersoft: token\n        }\n      });\n      dispatch({\n        type: PERSONAL_INFO,\n        personalInfo: result.data.content\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const updateInfo = formUser => {\n  return async dispatch => {\n    try {\n      await Axios({\n        url: 'https://movienew.cybersoft.edu.vn/api/QuanLyNguoiDung/CapNhatThongTinNguoiDung',\n        method: 'PUT',\n        data: formUser,\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem(\"ACCESSTOKEN\"),\n          TokenCybersoft: token\n        }\n      });\n      dispatch(getPersonalInfo());\n      Swal.fire('Thông báo', 'Cập nhật thành công', 'success');\n    } catch (error) {\n      Swal.fire('Thông báo', 'Cập nhật thất bại', 'error');\n      console.log(error);\n    }\n  };\n};","map":{"version":3,"sources":["D:/FrontEnd/Project/newMovie/src/Redux/Actions/UserManagerActions.js"],"names":["Axios","Swal","history","PERSONAL_INFO","SIGN_IN","USER_LIST","USER_UPDATE","token","signInAction","accounts","dispatch","result","url","method","data","headers","TokenCybersoft","localStorage","setItem","JSON","stringify","content","accessToken","fire","type","userSignIn","maLoaiNguoiDung","push","err","signUpAction","then","error","getUserList","userList","console","log","deleteUser","account","Authorization","getItem","addUser","formUser","getUserUpdate","user","userUpdate","updateUser","getPersonalInfo","personalInfo","updateInfo"],"mappings":"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","sourcesContent":["import Axios from \"axios\"\r\nimport Swal from \"sweetalert2\"\r\nimport { history } from '../../Util/history'\r\nimport { PERSONAL_INFO, SIGN_IN, USER_LIST, USER_UPDATE } from \"../Const/MovieManagerConst\"\r\n\r\nconst token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0ZW5Mb3AiOiJCb290Y2FtcCAxNSIsIkhldEhhblN0cmluZyI6IjIwLzA2LzIwMjIiLCJIZXRIYW5UaW1lIjoiMTY1NTY4MzIwMDAwMCIsIm5iZiI6MTYyNjI4MjAwMCwiZXhwIjoxNjU1ODMwODAwfQ.p47FFJpArherjwlM71xTzdulAQIW37pR6fRGD3t3Ji0'\r\nexport const signInAction = (accounts) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let result = await Axios({\r\n                url: 'https://movienew.cybersoft.edu.vn/api/QuanLyNguoiDung/DangNhap',\r\n                method: 'POST',\r\n                data: accounts,\r\n                headers: {\r\n                    TokenCybersoft: token\r\n                }\r\n            })\r\n            localStorage.setItem(\"USER_SIGNIN\", JSON.stringify(result.data.content));\r\n            localStorage.setItem(\"ACCESSTOKEN\", result.data.content.accessToken);\r\n            Swal.fire('Thông báo', 'Đăng nhập thành công', 'success')\r\n            dispatch({\r\n                type: SIGN_IN,\r\n                userSignIn: result.data.content,\r\n            })\r\n            if (result.data.content.maLoaiNguoiDung === 'QuanTri') {\r\n                history.push('/admin')\r\n            } else {\r\n                history.push('/')\r\n            }\r\n        } catch (err) {\r\n            Swal.fire('Thông báo', 'Tài khoản hoặc mật khẩu không đúng', 'error')\r\n        }\r\n    }\r\n}\r\nexport const signUpAction = (accounts) => {\r\n    return async () => {\r\n        try {\r\n            await Axios({\r\n                url: 'https://movienew.cybersoft.edu.vn/api/QuanLyNguoiDung/DangKy',\r\n                method: 'POST',\r\n                data: accounts,\r\n                headers: {\r\n                    TokenCybersoft: token\r\n                }\r\n            }).then((result) => {\r\n                Swal.fire('Thông báo', 'Đăng ký thành công', 'success')\r\n                history.push('/dangnhap')\r\n            })\r\n        } catch (error) {\r\n            Swal.fire('Thông báo', 'Đăng ký thất bại', 'error')\r\n        }\r\n    }\r\n}\r\nexport const getUserList = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let result = await Axios({\r\n                url: 'https://movienew.cybersoft.edu.vn/api/QuanLyNguoiDung/LayDanhSachNguoiDung?MaNhom=GP01',\r\n                method: 'GET',\r\n                headers: {\r\n                    TokenCybersoft: token\r\n                }\r\n            })\r\n            dispatch({\r\n                type: USER_LIST,\r\n                userList: result.data.content,\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\nexport const deleteUser = (account) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            await Axios({\r\n                url: `https://movienew.cybersoft.edu.vn/api/QuanLyNguoiDung/XoaNguoiDung?TaiKhoan=${account}`,\r\n                method: 'DELETE',\r\n                headers: {\r\n                    Authorization: 'Bearer ' + localStorage.getItem(\"ACCESSTOKEN\"),\r\n                    TokenCybersoft: token\r\n                }\r\n            })\r\n            dispatch(getUserList())\r\n            Swal.fire('Thông báo', 'Xóa thành công', 'success')\r\n        } catch (error) {\r\n            Swal.fire('Thông báo', 'Xóa thất bại', 'error')\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\nexport const addUser = (formUser) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            await Axios({\r\n                url: 'https://movienew.cybersoft.edu.vn/api/QuanLyNguoiDung/ThemNguoiDung',\r\n                method: 'POST',\r\n                data: formUser,\r\n                headers: {\r\n                    Authorization: 'Bearer ' + localStorage.getItem(\"ACCESSTOKEN\"),\r\n                    TokenCybersoft: token\r\n                }\r\n            })\r\n            dispatch(getUserList())\r\n            Swal.fire('Thông báo', 'Thêm thành công', 'success')\r\n        } catch (error) {\r\n            Swal.fire('Thông báo', 'Thêm thất bại', 'error')\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\nexport const getUserUpdate = (user) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            await Axios({\r\n                url: `https://movienew.cybersoft.edu.vn/api/QuanLyNguoiDung/LayThongTinNguoiDung?taiKhoan=${user}`,\r\n                method: 'POST',\r\n                headers: {\r\n                    Authorization: 'Bearer ' + localStorage.getItem(\"ACCESSTOKEN\"),\r\n                    TokenCybersoft: token\r\n                }\r\n            }).then((result) => {\r\n                dispatch({\r\n                    type: USER_UPDATE,\r\n                    userUpdate: result.data.content,\r\n                })\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\nexport const updateUser = (formUser) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            await Axios({\r\n                url: 'https://movienew.cybersoft.edu.vn/api/QuanLyNguoiDung/CapNhatThongTinNguoiDung',\r\n                method: 'POST',\r\n                data: formUser,\r\n                headers: {\r\n                    Authorization: 'Bearer ' + localStorage.getItem(\"ACCESSTOKEN\"),\r\n                    TokenCybersoft: token\r\n                }\r\n            })\r\n            dispatch(getUserList())\r\n            Swal.fire('Thông báo', 'Cập nhật thành công', 'success')\r\n        } catch (error) {\r\n            Swal.fire('Thông báo', 'Cập nhật thất bại', 'error')\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\nexport const getPersonalInfo = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let result = await Axios({\r\n                url: 'https://movienew.cybersoft.edu.vn/api/QuanLyNguoiDung/ThongTinTaiKhoan',\r\n                method: 'POST',\r\n                headers: {\r\n                    Authorization: 'Bearer ' + localStorage.getItem(\"ACCESSTOKEN\"),\r\n                    TokenCybersoft: token\r\n                }\r\n            })\r\n            dispatch({\r\n                type: PERSONAL_INFO,\r\n                personalInfo: result.data.content\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\nexport const updateInfo = (formUser) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            await Axios({\r\n                url: 'https://movienew.cybersoft.edu.vn/api/QuanLyNguoiDung/CapNhatThongTinNguoiDung',\r\n                method: 'PUT',\r\n                data: formUser,\r\n                headers: {\r\n                    Authorization: 'Bearer ' + localStorage.getItem(\"ACCESSTOKEN\"),\r\n                    TokenCybersoft: token\r\n                }\r\n            })\r\n            dispatch(getPersonalInfo())\r\n            Swal.fire('Thông báo', 'Cập nhật thành công', 'success')\r\n        } catch (error) {\r\n            Swal.fire('Thông báo', 'Cập nhật thất bại', 'error')\r\n            console.log(error);\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}