{"ast":null,"code":"import Axios from 'axios';\nimport Swal from 'sweetalert2';\nimport { BOOKING_SUCCESS, CHANGE_CODE_CINEMA, GET_BANNER_LIST, GET_CINEMA_BY_CODE, GET_CINEMA_SYSTEM, GET_INFO_MOVIE, GET_MOVIES_LIST, GET_MOVIE_DETAILS, GET_SHOW_SCHEDULE, GET_TICKET_ROOM } from '../Const/MovieManagerConst';\nconst token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0ZW5Mb3AiOiJCb290Y2FtcCAzNSIsIkhldEhhblN0cmluZyI6IjAzLzA2LzIwMjMiLCJIZXRIYW5UaW1lIjoiMTY4NTc1MDQwMDAwMCIsIm5iZiI6MTY1NzczMTYwMCwiZXhwIjoxNjg1ODk4MDAwfQ.KXn1XtehbphvfW3OSUFlLIzSrEtSLDtDQG4BgF38Cus';\nexport const getMovieList = () => {\n  return async dispatch => {\n    try {\n      let result = await Axios({\n        url: 'https://movienew.cybersoft.edu.vn/api/QuanLyPhim/LayDanhSachPhim?maNhom=GP11',\n        method: 'GET',\n        headers: {\n          TokenCybersoft: token\n        }\n      });\n      dispatch({\n        type: GET_MOVIES_LIST,\n        moviesList: result.data.content\n      });\n    } catch (error) {\n      console.log('Thất bại', error.response);\n    }\n  };\n}; // export const getMovieList2 = () => {\n//     return async (dispatch) => {\n//         try {\n//             let result = await Axios({\n//                 url: 'https://movie0706.cybersoft.edu.vn/api/QuanLyPhim/LayDanhSachPhim?maNhom=GP01',\n//                 method: 'GET',\n//                 headers: {\n//                     TokenCybersoft: token\n//                 }\n//             })\n//             dispatch({\n//                 type: GET_MOVIES_LIST,\n//                 moviesList: result.data\n//             })\n//         } catch (error) {\n//             console.log('Thất bại', error.response)\n//         }\n//     }\n// }\n\nexport const getCinemaSystem = () => {\n  return async dispatch => {\n    try {\n      let result = await Axios({\n        url: 'https://movienew.cybersoft.edu.vn/api/QuanLyRap/LayThongTinLichChieuHeThongRap?maNhom=GP05',\n        method: 'GET',\n        headers: {\n          TokenCybersoft: token\n        }\n      });\n      dispatch({\n        type: GET_CINEMA_SYSTEM,\n        cinemaSystem: result.data.content\n      });\n    } catch (error) {\n      console.log('Thất bại', error.response);\n    }\n  };\n};\nexport const getTheTheaterClusterByCode = code => {\n  return async dispatch => {\n    try {\n      let result = await Axios({\n        url: `https://movienew.cybersoft.edu.vn/api/QuanLyRap/LayThongTinCumRapTheoHeThong`,\n        method: 'GET',\n        headers: {\n          TokenCybersoft: token\n        }\n      }); // dispatch({\n      //     type: GET_CINEMA_BY_CODE,\n      //     cinemaByCode: result.data\n      // })\n    } catch (error) {\n      console.log('Thất bại', error.response);\n    }\n  };\n};\nexport const changeCodeCluster = newCode => {\n  return {\n    type: CHANGE_CODE_CINEMA,\n    newCode\n  };\n};\nexport const getMovieDetails = movieCode => {\n  return async dispatch => {\n    try {\n      await Axios({\n        url: `https://movienew.cybersoft.edu.vn/api/QuanLyRap/LayThongTinLichChieuPhim?MaPhim=${movieCode}`,\n        method: 'GET',\n        headers: {\n          TokenCybersoft: token\n        }\n      }).then(result => {\n        dispatch({\n          type: GET_MOVIE_DETAILS,\n          movieDetails: result.data.content\n        });\n      });\n    } catch (error) {\n      console.log('Thất bại', error.response);\n    }\n  };\n};\nexport const getTicketRoom = showtimeCode => {\n  return async dispatch => {\n    try {\n      await Axios({\n        url: `https://movienew.cybersoft.edu.vn/api/QuanLyDatVe/LayDanhSachPhongVe?MaLichChieu=${showtimeCode}`,\n        method: 'GET',\n        headers: {\n          TokenCybersoft: token\n        }\n      }).then(result => {\n        dispatch({\n          type: GET_TICKET_ROOM,\n          ticketRoom: result.data.content\n        });\n      });\n    } catch (error) {\n      console.log('Thất bại', error.response);\n    }\n  };\n};\nexport const bookTicketsAction = tickets => {\n  return async dispatch => {\n    try {\n      await Axios({\n        url: 'https://movienew.cybersoft.edu.vn/api/QuanLyDatVe/DatVe',\n        method: 'POST',\n        data: tickets,\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem(\"ACCESSTOKEN\"),\n          TokenCybersoft: token\n        }\n      }).then(result => {\n        dispatch(getTicketRoom(tickets.maLichChieu));\n        Swal.fire('Thông báo', 'Đặt vé thành công', 'success');\n        dispatch({\n          type: BOOKING_SUCCESS\n        });\n      });\n    } catch (error) {\n      Swal.fire('Thông báo', `Mua vé thất bại ${error}`, 'error');\n    }\n  };\n};\nexport const deleteMovie = movieCode => {\n  return async dispatch => {\n    try {\n      await Axios({\n        url: `https://movienew.cybersoft.edu.vn/api/QuanLyPhim/XoaPhim?MaPhim=${movieCode}`,\n        method: 'DELETE',\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem(\"ACCESSTOKEN\"),\n          TokenCybersoft: token\n        }\n      }).then(result => {\n        dispatch(getMovieList());\n        Swal.fire('Thông báo', 'Xóa thành công', 'success');\n      }).catch(error => {\n        Swal.fire('Thông báo', `Xóa thất bại ${error}`, 'error');\n      });\n    } catch (error) {\n      console.log(error);\n      Swal.fire('Thông báo', `Xóa thất bại ${error}`, 'error');\n    }\n  };\n};\nexport const addMovie = dataMovie => {\n  return async dispatch => {\n    try {\n      await Axios({\n        // link api sai\n        url: 'https://movienew.cybersoft.edu.vn/api/QuanLyPhim/ThemPhimUploadHinh',\n        method: 'POST',\n        data: dataMovie,\n        headers: {\n          TokenCybersoft: token\n        }\n      }).then(result => {\n        dispatch(getMovieList());\n        Swal.fire('Thông báo', 'Thêm phim thành công', 'success');\n      });\n    } catch (err) {\n      console.log(err);\n      Swal.fire('Thông báo', 'Thêm phim thất bại', 'error');\n    }\n  };\n};\nexport const getInfoMovie = movieCode => {\n  return async dispatch => {\n    try {\n      await Axios({\n        url: `https://movienew.cybersoft.edu.vn/api/QuanLyPhim/LayThongTinPhim?MaPhim=${movieCode}`,\n        method: 'GET',\n        headers: {\n          TokenCybersoft: token\n        }\n      }).then(result => {\n        dispatch({\n          type: GET_INFO_MOVIE,\n          movieInfo: result.data.content\n        });\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n};\nexport const updateMovie = dataMovie => {\n  return async () => {\n    try {\n      await Axios({\n        // link api sai\n        url: 'https://movienew.cybersoft.edu.vn/api/QuanLyPhim/CapNhatPhimUpload',\n        method: 'POST',\n        data: dataMovie,\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem(\"ACCESSTOKEN\"),\n          TokenCybersoft: token\n        }\n      });\n      Swal.fire('Thông báo', 'Cập nhật thành công', 'success');\n    } catch (error) {\n      Swal.fire({\n        title: 'Cập nhật thất bại',\n        text: `${error}`,\n        icon: 'error',\n        confirmButtonColor: '#3085d6',\n        confirmButtonText: 'Ok'\n      });\n    }\n  };\n};\nexport const createShowTime = formCreate => {\n  return async () => {\n    try {\n      await Axios({\n        url: 'https://movienew.cybersoft.edu.vn/api/QuanLyDatVe/TaoLichChieu',\n        method: 'POST',\n        data: formCreate,\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem(\"ACCESSTOKEN\"),\n          TokenCybersoft: token\n        }\n      });\n      Swal.fire('Thông báo', 'Tạo thành công', 'success');\n    } catch (err) {\n      Swal.fire('Thông báo', `Tạo thất bại ${err}`, 'error');\n    }\n  };\n};","map":{"version":3,"sources":["E:/FrontEnd/Project/newMovie/src/Redux/Actions/MovieManagerActions.js"],"names":["Axios","Swal","BOOKING_SUCCESS","CHANGE_CODE_CINEMA","GET_BANNER_LIST","GET_CINEMA_BY_CODE","GET_CINEMA_SYSTEM","GET_INFO_MOVIE","GET_MOVIES_LIST","GET_MOVIE_DETAILS","GET_SHOW_SCHEDULE","GET_TICKET_ROOM","token","getMovieList","dispatch","result","url","method","headers","TokenCybersoft","type","moviesList","data","content","error","console","log","response","getCinemaSystem","cinemaSystem","getTheTheaterClusterByCode","code","changeCodeCluster","newCode","getMovieDetails","movieCode","then","movieDetails","getTicketRoom","showtimeCode","ticketRoom","bookTicketsAction","tickets","Authorization","localStorage","getItem","maLichChieu","fire","deleteMovie","catch","addMovie","dataMovie","err","getInfoMovie","movieInfo","updateMovie","title","text","icon","confirmButtonColor","confirmButtonText","createShowTime","formCreate"],"mappings":"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","sourcesContent":["import Axios from 'axios'\r\nimport Swal from 'sweetalert2'\r\nimport { BOOKING_SUCCESS, CHANGE_CODE_CINEMA, GET_BANNER_LIST, GET_CINEMA_BY_CODE, GET_CINEMA_SYSTEM, GET_INFO_MOVIE, GET_MOVIES_LIST, GET_MOVIE_DETAILS, GET_SHOW_SCHEDULE, GET_TICKET_ROOM } from '../Const/MovieManagerConst'\r\nconst token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0ZW5Mb3AiOiJCb290Y2FtcCAzNSIsIkhldEhhblN0cmluZyI6IjAzLzA2LzIwMjMiLCJIZXRIYW5UaW1lIjoiMTY4NTc1MDQwMDAwMCIsIm5iZiI6MTY1NzczMTYwMCwiZXhwIjoxNjg1ODk4MDAwfQ.KXn1XtehbphvfW3OSUFlLIzSrEtSLDtDQG4BgF38Cus'\r\n\r\nexport const getMovieList = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let result = await Axios({\r\n                url: 'https://movienew.cybersoft.edu.vn/api/QuanLyPhim/LayDanhSachPhim?maNhom=GP11',\r\n                method: 'GET',\r\n                headers: {\r\n                    TokenCybersoft: token\r\n                }\r\n            })\r\n            dispatch({\r\n                type: GET_MOVIES_LIST,\r\n                moviesList: result.data.content\r\n            })\r\n        } catch (error) {\r\n            console.log('Thất bại', error.response)\r\n        }\r\n    }\r\n}\r\n// export const getMovieList2 = () => {\r\n//     return async (dispatch) => {\r\n//         try {\r\n//             let result = await Axios({\r\n//                 url: 'https://movie0706.cybersoft.edu.vn/api/QuanLyPhim/LayDanhSachPhim?maNhom=GP01',\r\n//                 method: 'GET',\r\n//                 headers: {\r\n//                     TokenCybersoft: token\r\n//                 }\r\n//             })\r\n//             dispatch({\r\n//                 type: GET_MOVIES_LIST,\r\n//                 moviesList: result.data\r\n//             })\r\n//         } catch (error) {\r\n//             console.log('Thất bại', error.response)\r\n//         }\r\n//     }\r\n// }\r\nexport const getCinemaSystem = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let result = await Axios({\r\n                url: 'https://movienew.cybersoft.edu.vn/api/QuanLyRap/LayThongTinLichChieuHeThongRap?maNhom=GP05',\r\n                method: 'GET',\r\n                headers: {\r\n                    TokenCybersoft: token\r\n                }\r\n            })\r\n            dispatch({\r\n                type: GET_CINEMA_SYSTEM,\r\n                cinemaSystem: result.data.content\r\n            })\r\n        } catch (error) {\r\n            console.log('Thất bại', error.response)\r\n        }\r\n    }\r\n}\r\nexport const getTheTheaterClusterByCode = (code) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let result = await Axios({\r\n                url: `https://movienew.cybersoft.edu.vn/api/QuanLyRap/LayThongTinCumRapTheoHeThong`,\r\n                method: 'GET',\r\n                headers: {\r\n                    TokenCybersoft: token\r\n                }\r\n            })\r\n            // dispatch({\r\n            //     type: GET_CINEMA_BY_CODE,\r\n            //     cinemaByCode: result.data\r\n            // })\r\n        } catch (error) {\r\n            console.log('Thất bại', error.response)\r\n        }\r\n    }\r\n}\r\nexport const changeCodeCluster = (newCode) => {\r\n    return {\r\n        type: CHANGE_CODE_CINEMA,\r\n        newCode\r\n    }\r\n}\r\nexport const getMovieDetails = (movieCode) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            await Axios({\r\n                url: `https://movienew.cybersoft.edu.vn/api/QuanLyRap/LayThongTinLichChieuPhim?MaPhim=${movieCode}`,\r\n                method: 'GET',\r\n                headers: {\r\n                    TokenCybersoft: token\r\n                }\r\n            }).then((result) => {\r\n                dispatch({\r\n                    type: GET_MOVIE_DETAILS,\r\n                    movieDetails: result.data.content\r\n                })\r\n            })\r\n        } catch (error) {\r\n            console.log('Thất bại', error.response)\r\n\r\n        }\r\n    }\r\n}\r\nexport const getTicketRoom = (showtimeCode) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            await Axios({\r\n                url: `https://movienew.cybersoft.edu.vn/api/QuanLyDatVe/LayDanhSachPhongVe?MaLichChieu=${showtimeCode}`,\r\n                method: 'GET',\r\n                headers: {\r\n                    TokenCybersoft: token\r\n                }\r\n            }).then((result) => {\r\n                dispatch({\r\n                    type: GET_TICKET_ROOM,\r\n                    ticketRoom: result.data.content\r\n                })\r\n            })\r\n\r\n        } catch (error) {\r\n            console.log('Thất bại', error.response)\r\n        }\r\n    }\r\n}\r\nexport const bookTicketsAction = (tickets) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            await Axios({\r\n                url: 'https://movienew.cybersoft.edu.vn/api/QuanLyDatVe/DatVe',\r\n                method: 'POST',\r\n                data: tickets,\r\n                headers: {\r\n                    Authorization: 'Bearer ' + localStorage.getItem(\"ACCESSTOKEN\"),\r\n                    TokenCybersoft: token\r\n                }\r\n            }).then((result) => {\r\n                dispatch(getTicketRoom(tickets.maLichChieu))\r\n                Swal.fire('Thông báo', 'Đặt vé thành công', 'success')\r\n                dispatch({\r\n                    type: BOOKING_SUCCESS,\r\n                })\r\n            })\r\n        } catch (error) {\r\n            Swal.fire('Thông báo', `Mua vé thất bại ${error}`, 'error')\r\n        }\r\n    }\r\n}\r\nexport const deleteMovie = (movieCode) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            await Axios({\r\n                url: `https://movienew.cybersoft.edu.vn/api/QuanLyPhim/XoaPhim?MaPhim=${movieCode}`,\r\n                method: 'DELETE',\r\n                headers: {\r\n                    Authorization: 'Bearer ' + localStorage.getItem(\"ACCESSTOKEN\"),\r\n                    TokenCybersoft: token\r\n                }\r\n            }).then((result) => {\r\n                dispatch(getMovieList())\r\n                Swal.fire('Thông báo', 'Xóa thành công', 'success')\r\n            }).catch((error) => {\r\n                Swal.fire('Thông báo', `Xóa thất bại ${error}`, 'error')\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            Swal.fire('Thông báo', `Xóa thất bại ${error}`, 'error')\r\n        }\r\n    }\r\n}\r\nexport const addMovie = (dataMovie) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            await Axios({\r\n                // link api sai\r\n                url: 'https://movienew.cybersoft.edu.vn/api/QuanLyPhim/ThemPhimUploadHinh',\r\n                method: 'POST',\r\n                data: dataMovie,\r\n                headers: {\r\n                    TokenCybersoft: token\r\n                }\r\n            }).then((result) => {\r\n                dispatch(getMovieList())\r\n                Swal.fire('Thông báo', 'Thêm phim thành công', 'success')\r\n            })\r\n        } catch (err) {\r\n            console.log(err)\r\n            Swal.fire('Thông báo', 'Thêm phim thất bại', 'error')\r\n        }\r\n    }\r\n}\r\nexport const getInfoMovie = (movieCode) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            await Axios({\r\n                url: `https://movienew.cybersoft.edu.vn/api/QuanLyPhim/LayThongTinPhim?MaPhim=${movieCode}`,\r\n                method: 'GET',\r\n                headers: {\r\n                    TokenCybersoft: token\r\n                }\r\n            }).then((result) => {\r\n                dispatch({\r\n                    type: GET_INFO_MOVIE,\r\n                    movieInfo: result.data.content\r\n                })\r\n            })\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n}\r\nexport const updateMovie = (dataMovie) => {\r\n    return async () => {\r\n        try {\r\n            await Axios({\r\n                // link api sai\r\n                url: 'https://movienew.cybersoft.edu.vn/api/QuanLyPhim/CapNhatPhimUpload',\r\n                method: 'POST',\r\n                data: dataMovie,\r\n                headers: {\r\n                    Authorization: 'Bearer ' + localStorage.getItem(\"ACCESSTOKEN\"),\r\n                    TokenCybersoft: token\r\n                }\r\n            })\r\n            Swal.fire('Thông báo', 'Cập nhật thành công', 'success')\r\n        } catch (error) {\r\n            Swal.fire({\r\n                title: 'Cập nhật thất bại',\r\n                text: `${error}`,\r\n                icon: 'error',\r\n                confirmButtonColor: '#3085d6',\r\n                confirmButtonText: 'Ok',\r\n            })\r\n        }\r\n    }\r\n}\r\nexport const createShowTime = (formCreate) => {\r\n    return async () => {\r\n        try {\r\n            await Axios({\r\n                url: 'https://movienew.cybersoft.edu.vn/api/QuanLyDatVe/TaoLichChieu',\r\n                method: 'POST',\r\n                data: formCreate,\r\n                headers: {\r\n                    Authorization: 'Bearer ' + localStorage.getItem(\"ACCESSTOKEN\"),\r\n                    TokenCybersoft: token\r\n                }\r\n            })\r\n            Swal.fire('Thông báo', 'Tạo thành công', 'success')\r\n        } catch (err) {\r\n            Swal.fire('Thông báo', `Tạo thất bại ${err}`, 'error')\r\n\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}