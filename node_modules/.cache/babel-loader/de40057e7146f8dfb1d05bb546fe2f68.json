{"ast":null,"code":"var _jsxFileName = \"E:\\\\FrontEnd\\\\Project\\\\newMovie\\\\src\\\\Pages\\\\Admin\\\\Movie\\\\Create-Showtime.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/rules-of-hooks */\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport DateTimePicker from '@mui/lab/DateTimePicker';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport MenuItem from '@mui/material/MenuItem';\nimport TextField from '@mui/material/TextField';\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createShowTime, getTheTheaterClusterByCode } from '../../../Redux/Actions/MovieManagerActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theaterCluster = [{\n  value: 'BHDStar',\n  label: 'BHDStar'\n}, {\n  value: 'CGV',\n  label: 'CGV'\n}, {\n  value: 'CineStar',\n  label: 'CineStar'\n}, {\n  value: 'Galaxy',\n  label: 'Galaxy'\n}, {\n  value: 'LotteCinima',\n  label: 'LotteCinima'\n}, {\n  value: 'MegaGS',\n  label: 'MegaGS'\n}];\n\nfunction CreateShowTime(_ref) {\n  _s();\n\n  let {\n    open,\n    handleClose,\n    movieCode\n  } = _ref;\n  const dispatch = useDispatch();\n  const cinemaByCode = useSelector(state => state.MovieManagerReducer.cinemaByCode);\n  const [date, setDate] = React.useState(null);\n  const [formCreate, setFormCreate] = useState({\n    maPhim: null,\n    ngayChieuGioChieu: '',\n    maRap: '',\n    giaVe: '',\n    maHeThongRap: ''\n  });\n\n  const onSelectDate = newDate => {\n    let newDataMovie = { ...formCreate,\n      ngayChieuGioChieu: moment(newDate).format('DD/MM/YYYY hh:mm:ss')\n    };\n    setDate(newDate);\n    setFormCreate(newDataMovie);\n  };\n\n  const onChangeInput = event => {\n    let {\n      name,\n      value\n    } = event.target;\n\n    if (name === 'maHeThongRap') {\n      dispatch(getTheTheaterClusterByCode(value));\n    }\n\n    let newFormCrate = { ...formCreate,\n      [name]: value\n    };\n    setFormCreate(newFormCrate);\n  };\n\n  const onSubmit = () => {\n    delete formCreate.maHeThongRap;\n    dispatch(createShowTime(formCreate));\n    handleClose();\n  };\n\n  useEffect(() => {\n    if (movieCode) {\n      let newFormCrate = {\n        maPhim: movieCode,\n        ngayChieuGioChieu: '',\n        maRap: '',\n        giaVe: '',\n        maHeThongRap: ''\n      };\n      setDate(null);\n      setFormCreate(newFormCrate);\n    }\n  }, [movieCode]);\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    fullWidth: true,\n    maxWidth: \"sm\",\n    open: open,\n    keepMounted: true,\n    onClose: handleClose,\n    \"aria-describedby\": \"alert-dialog-slide-description\",\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      sx: {\n        fontSize: '30px'\n      },\n      children: \"Tạo lịch chiếu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      dividers: true,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          '& .MuiTextField-root': {\n            mb: 2,\n            width: '100%'\n          },\n          '& .MuiOutlinedInput-root, .MuiInputLabel-root': {\n            fontSize: '15px'\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          name: \"maPhim\",\n          label: \"M\\xE3 Phim\",\n          disabled: true,\n          variant: \"outlined\",\n          value: movieCode,\n          defaultValue: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-select-currency\",\n          select: true,\n          name: \"maHeThongRap\",\n          label: \"C\\u1EE5m r\\u1EA1p\",\n          value: formCreate.maHeThongRap,\n          onChange: onChangeInput,\n          children: theaterCluster.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: option.value,\n            children: option.label\n          }, option.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          select: true,\n          name: \"maRap\",\n          label: \"M\\xE3 r\\u1EA1p\",\n          value: formCreate.maRap,\n          onChange: onChangeInput,\n          children: cinemaByCode.map((option, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: option.maCumRap,\n            children: option.maCumRap\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"giaVe\",\n          type: \"number\",\n          label: \"Gi\\xE1 v\\xE9\",\n          variant: \"outlined\",\n          value: formCreate.giaVe,\n          onChange: onChangeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n          dateAdapter: AdapterDateFns,\n          children: /*#__PURE__*/_jsxDEV(DateTimePicker, {\n            label: \"Ng\\xE0y gi\\u1EDD chi\\u1EBFu\",\n            value: date,\n            disablePast: true,\n            name: \"ngayChieuGioChieu\",\n            onChange: newDate => onSelectDate(newDate),\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"error\",\n        onClick: handleClose,\n        children: \"H\\u1EE7y\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: onSubmit,\n        type: \"submit\",\n        children: \"T\\u1EA1o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreateShowTime, \"0Hyl6MW7uxMoFdy76rIzrP576DA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = CreateShowTime;\n;\nexport default _c2 = /*#__PURE__*/React.memo(CreateShowTime);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CreateShowTime\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["E:/FrontEnd/Project/newMovie/src/Pages/Admin/Movie/Create-Showtime.js"],"names":["AdapterDateFns","DateTimePicker","LocalizationProvider","Box","Button","Dialog","DialogActions","DialogContent","DialogTitle","MenuItem","TextField","moment","React","useEffect","useState","useDispatch","useSelector","createShowTime","getTheTheaterClusterByCode","theaterCluster","value","label","CreateShowTime","open","handleClose","movieCode","dispatch","cinemaByCode","state","MovieManagerReducer","date","setDate","formCreate","setFormCreate","maPhim","ngayChieuGioChieu","maRap","giaVe","maHeThongRap","onSelectDate","newDate","newDataMovie","format","onChangeInput","event","name","target","newFormCrate","onSubmit","fontSize","mb","width","map","option","index","maCumRap","params","memo"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/rules-of-hooks */\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport DateTimePicker from '@mui/lab/DateTimePicker';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport TextField from '@mui/material/TextField';\r\nimport moment from 'moment';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createShowTime, getTheTheaterClusterByCode } from '../../../Redux/Actions/MovieManagerActions';\r\nconst theaterCluster = [\r\n    {\r\n        value: 'BHDStar',\r\n        label: 'BHDStar',\r\n    },\r\n    {\r\n        value: 'CGV',\r\n        label: 'CGV',\r\n    },\r\n    {\r\n        value: 'CineStar',\r\n        label: 'CineStar',\r\n    },\r\n    {\r\n        value: 'Galaxy',\r\n        label: 'Galaxy',\r\n    },\r\n    {\r\n        value: 'LotteCinima',\r\n        label: 'LotteCinima',\r\n    },\r\n    {\r\n        value: 'MegaGS',\r\n        label: 'MegaGS',\r\n    },\r\n];\r\nfunction CreateShowTime({ open, handleClose, movieCode }) {\r\n    const dispatch = useDispatch()\r\n    const cinemaByCode = useSelector(state => state.MovieManagerReducer.cinemaByCode)\r\n    const [date, setDate] = React.useState(null);\r\n    const [formCreate, setFormCreate] = useState({\r\n        maPhim: null,\r\n        ngayChieuGioChieu: '',\r\n        maRap: '',\r\n        giaVe: '',\r\n        maHeThongRap: ''\r\n    });\r\n    const onSelectDate = (newDate) => {\r\n        let newDataMovie = { ...formCreate, ngayChieuGioChieu: moment(newDate).format('DD/MM/YYYY hh:mm:ss') }\r\n        setDate(newDate)\r\n        setFormCreate(newDataMovie)\r\n    }\r\n    const onChangeInput = (event) => {\r\n        let { name, value } = event.target\r\n        if (name === 'maHeThongRap') {\r\n            dispatch(getTheTheaterClusterByCode(value))\r\n        }\r\n        let newFormCrate = { ...formCreate, [name]: value }\r\n        setFormCreate(newFormCrate)\r\n    }\r\n    const onSubmit = () => {\r\n        delete formCreate.maHeThongRap\r\n        dispatch(createShowTime(formCreate))\r\n        handleClose()\r\n    }\r\n    useEffect(() => {\r\n        if (movieCode) {\r\n            let newFormCrate = {\r\n                maPhim: movieCode,\r\n                ngayChieuGioChieu: '',\r\n                maRap: '',\r\n                giaVe: '',\r\n                maHeThongRap: ''\r\n            }\r\n            setDate(null)\r\n            setFormCreate(newFormCrate)\r\n        }\r\n    }, [movieCode])\r\n    return (\r\n        <Dialog\r\n            fullWidth\r\n            maxWidth='sm'\r\n            open={open}\r\n            keepMounted\r\n            onClose={handleClose}\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle sx={{ fontSize: '30px' }}>{\"Tạo lịch chiếu\"}</DialogTitle>\r\n            <DialogContent dividers>\r\n                <Box sx={{\r\n                    '& .MuiTextField-root': { mb: 2, width: '100%' },\r\n                    '& .MuiOutlinedInput-root, .MuiInputLabel-root': { fontSize: '15px' },\r\n                }}>\r\n                    <TextField name='maPhim' label=\"Mã Phim\" disabled variant=\"outlined\" value={movieCode} defaultValue='0' />\r\n                    <TextField\r\n                        id=\"outlined-select-currency\"\r\n                        select\r\n                        name='maHeThongRap'\r\n                        label=\"Cụm rạp\"\r\n                        value={formCreate.maHeThongRap}\r\n                        onChange={onChangeInput}\r\n                    >\r\n                        {theaterCluster.map((option) => (\r\n                            <MenuItem key={option.value} value={option.value}>\r\n                                {option.label}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                    <TextField\r\n                        select\r\n                        name='maRap'\r\n                        label=\"Mã rạp\"\r\n                        value={formCreate.maRap}\r\n                        onChange={onChangeInput}\r\n                    >\r\n                        {cinemaByCode.map((option, index) => (\r\n                            <MenuItem key={index} value={option.maCumRap}>\r\n                                {option.maCumRap}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                    <TextField name='giaVe' type='number' label=\"Giá vé\" variant=\"outlined\" value={formCreate.giaVe} onChange={onChangeInput} />\r\n                    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                        <DateTimePicker\r\n                            label=\"Ngày giờ chiếu\"\r\n                            value={date}\r\n                            disablePast\r\n                            name='ngayChieuGioChieu'\r\n                            onChange={(newDate) => onSelectDate(newDate)}\r\n                            renderInput={(params) => <TextField {...params} />}\r\n                        />\r\n                    </LocalizationProvider>\r\n                </Box>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button variant='contained' color='error' onClick={handleClose}>Hủy</Button>\r\n                <Button variant='contained' color='primary' onClick={onSubmit} type='submit'>Tạo</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n\r\n    );\r\n};\r\nexport default React.memo(CreateShowTime)"]},"metadata":{},"sourceType":"module"}