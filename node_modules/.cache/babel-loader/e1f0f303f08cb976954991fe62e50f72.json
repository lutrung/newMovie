{"ast":null,"code":"import Axios from 'axios';\nimport Swal from 'sweetalert2';\nimport { BOOKING_SUCCESS, CHANGE_CODE_CINEMA, GET_BANNER_LIST, GET_CINEMA_BY_CODE, GET_CINEMA_SYSTEM, GET_INFO_MOVIE, GET_MOVIES_LIST, GET_MOVIE_DETAILS, GET_SHOW_SCHEDULE, GET_TICKET_ROOM } from '../Const/MovieManagerConst';\nconst token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0ZW5Mb3AiOiJCb290Y2FtcCAxNSIsIkhldEhhblN0cmluZyI6IjIwLzA2LzIwMjIiLCJIZXRIYW5UaW1lIjoiMTY1NTY4MzIwMDAwMCIsIm5iZiI6MTYyNjI4MjAwMCwiZXhwIjoxNjU1ODMwODAwfQ.p47FFJpArherjwlM71xTzdulAQIW37pR6fRGD3t3Ji0';\nexport const getBannerList = () => {\n  return async dispatch => {\n    try {\n      let result = await Axios({\n        url: 'https://movienew.cybersoft.edu.vn/api/QuanLyPhim/LayDanhSachBanner',\n        method: 'GET',\n        headers: {\n          TokenCybersoft: token\n        }\n      });\n      dispatch({\n        type: GET_BANNER_LIST,\n        bannerList: result.data.content\n      });\n    } catch (err) {\n      console.log('Thất bại', err.response);\n    }\n  };\n};\nexport const getMovieList = () => {\n  return async dispatch => {\n    try {\n      let result = await Axios({\n        url: 'https://movienew.cybersoft.edu.vn/api/QuanLyPhim/LayDanhSachPhim?maNhom=GP01',\n        method: 'GET',\n        headers: {\n          TokenCybersoft: token\n        }\n      });\n      dispatch({\n        type: GET_MOVIES_LIST,\n        moviesList: result.data.content\n      });\n    } catch (error) {\n      console.log('Thất bại', error.response);\n    }\n  };\n};\nexport const getCinemaSystem = () => {\n  return async dispatch => {\n    try {\n      let result = await Axios({\n        url: 'https://movienew.cybersoft.edu.vn/api/QuanLyRap/LayThongTinHeThongRap',\n        method: 'GET',\n        headers: {\n          TokenCybersoft: token\n        }\n      });\n      dispatch({\n        type: GET_CINEMA_SYSTEM,\n        cinemaSystem: result.data.content\n      });\n    } catch (error) {\n      console.log('Thất bại', error.response);\n    }\n  };\n};\nexport const getTheTheaterClusterByCode = code => {\n  return async dispatch => {\n    try {\n      let result = await Axios({\n        url: `https://movienew.cybersoft.edu.vn/api/QuanLyRap/LayThongTinCumRapTheoHeThong?maHeThongRap=${code}`,\n        method: 'GET',\n        headers: {\n          TokenCybersoft: token\n        }\n      });\n      dispatch({\n        type: GET_CINEMA_BY_CODE,\n        cinemaByCode: result.data.content\n      });\n    } catch (error) {\n      console.log('Thất bại', error.response);\n    }\n  };\n};\nexport const getShowSchedule = code => {\n  return async dispatch => {\n    try {\n      let result = await Axios({\n        url: `https://movienew.cybersoft.edu.vn/api/QuanLyRap/LayThongTinLichChieuHeThongRap?maHeThongRap=${code}&maNhom=GP01`,\n        method: 'GET',\n        headers: {\n          TokenCybersoft: token\n        }\n      });\n      dispatch({\n        type: GET_SHOW_SCHEDULE,\n        showTimes: result.data.content\n      });\n    } catch (error) {\n      console.log('Thất bại', error.response);\n    }\n  };\n};\nexport const changeCodeCluster = newCode => {\n  return {\n    type: CHANGE_CODE_CINEMA,\n    newCode\n  };\n};\nexport const getMovieDetails = movieCode => {\n  return async dispatch => {\n    try {\n      await Axios({\n        url: `https://movienew.cybersoft.edu.vn/api/QuanLyRap/LayThongTinLichChieuPhim?MaPhim=${movieCode}`,\n        method: 'GET',\n        headers: {\n          TokenCybersoft: token\n        }\n      }).then(result => {\n        dispatch({\n          type: GET_MOVIE_DETAILS,\n          movieDetails: result.data.content\n        });\n      });\n    } catch (error) {\n      console.log('Thất bại', error.response);\n    }\n  };\n};\nexport const getTicketRoom = showtimeCode => {\n  return async dispatch => {\n    try {\n      await Axios({\n        url: `https://movienew.cybersoft.edu.vn/api/QuanLyDatVe/LayDanhSachPhongVe?MaLichChieu=${showtimeCode}`,\n        method: 'GET',\n        headers: {\n          TokenCybersoft: token\n        }\n      }).then(result => {\n        dispatch({\n          type: GET_TICKET_ROOM,\n          ticketRoom: result.data.content\n        });\n      });\n    } catch (error) {\n      console.log('Thất bại', error.response);\n    }\n  };\n};\nexport const bookTicketsAction = tickets => {\n  return async dispatch => {\n    try {\n      await Axios({\n        url: 'https://movienew.cybersoft.edu.vn/api/QuanLyDatVe/DatVe',\n        method: 'POST',\n        data: tickets,\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem(\"ACCESSTOKEN\"),\n          TokenCybersoft: token\n        }\n      }).then(result => {\n        dispatch(getTicketRoom(tickets.maLichChieu));\n        Swal.fire('Thông báo', 'Đặt vé thành công', 'success');\n        dispatch({\n          type: BOOKING_SUCCESS\n        });\n      });\n    } catch (error) {\n      Swal.fire('Thông báo', 'Mua vé thất bại', 'error');\n    }\n  };\n};\nexport const deleteMovie = movieCode => {\n  return async dispatch => {\n    try {\n      await Axios({\n        url: `https://movienew.cybersoft.edu.vn/api/QuanLyPhim/XoaPhim?MaPhim=${movieCode}`,\n        method: 'DELETE',\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem(\"ACCESSTOKEN\"),\n          TokenCybersoft: token\n        }\n      }).then(result => {\n        dispatch(getMovieList());\n        Swal.fire('Thông báo', 'Xóa thành công', 'success');\n      }).catch(error => {\n        Swal.fire('Thông báo', 'Xóa thất bại', 'error');\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const addMovie = dataMovie => {\n  return async dispatch => {\n    try {\n      await Axios({\n        url: 'https://movienew.cybersoft.edu.vn/api/QuanLyPhim/ThemPhimUploadHinh',\n        method: 'POST',\n        data: dataMovie,\n        headers: {\n          TokenCybersoft: token\n        }\n      }).then(result => {\n        dispatch(getMovieList());\n        Swal.fire('Thông báo', 'Thêm phim thành công', 'success');\n      });\n    } catch (err) {\n      console.log(err);\n      Swal.fire('Thông báo', 'Thêm phim thất bại', 'error');\n    }\n  };\n};\nexport const getInfoMovie = movieCode => {\n  return async dispatch => {\n    try {\n      await Axios({\n        url: `https://movienew.cybersoft.edu.vn/api/QuanLyPhim/LayThongTinPhim?MaPhim=${movieCode}`,\n        method: 'GET',\n        headers: {\n          TokenCybersoft: token\n        }\n      }).then(result => {\n        dispatch({\n          type: GET_INFO_MOVIE,\n          movieInfo: result.data.content\n        });\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n};\nexport const updateMovie = dataMovie => {\n  return async () => {\n    try {\n      await Axios({\n        url: 'https://movienew.cybersoft.edu.vn/api/QuanLyPhim/CapNhatPhimUpload',\n        method: 'POST',\n        data: dataMovie,\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem(\"ACCESSTOKEN\"),\n          TokenCybersoft: token\n        }\n      });\n      Swal.fire('Thông báo', 'Cập nhật thành công', 'success');\n    } catch (error) {\n      Swal.fire({\n        title: 'Cập nhật thất bại',\n        text: `${error}`,\n        icon: 'error',\n        confirmButtonColor: '#3085d6',\n        confirmButtonText: 'Ok'\n      });\n    }\n  };\n};\nexport const createShowTime = formCreate => {\n  return async () => {\n    try {\n      await Axios({\n        url: 'https://movienew.cybersoft.edu.vn/api/QuanLyDatVe/TaoLichChieu',\n        method: 'POST',\n        data: formCreate,\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem(\"ACCESSTOKEN\"),\n          TokenCybersoft: token\n        }\n      });\n      Swal.fire('Thông báo', 'Tạo thành công', 'success');\n    } catch (err) {\n      console.log(err);\n      Swal.fire('Thông báo', 'Tạo thất bại', 'error');\n    }\n  };\n};","map":{"version":3,"sources":["D:/FrontEnd/Project/newMovie/src/Redux/Actions/MovieManagerActions.js"],"names":["Axios","Swal","BOOKING_SUCCESS","CHANGE_CODE_CINEMA","GET_BANNER_LIST","GET_CINEMA_BY_CODE","GET_CINEMA_SYSTEM","GET_INFO_MOVIE","GET_MOVIES_LIST","GET_MOVIE_DETAILS","GET_SHOW_SCHEDULE","GET_TICKET_ROOM","token","getBannerList","dispatch","result","url","method","headers","TokenCybersoft","type","bannerList","data","content","err","console","log","response","getMovieList","moviesList","error","getCinemaSystem","cinemaSystem","getTheTheaterClusterByCode","code","cinemaByCode","getShowSchedule","showTimes","changeCodeCluster","newCode","getMovieDetails","movieCode","then","movieDetails","getTicketRoom","showtimeCode","ticketRoom","bookTicketsAction","tickets","Authorization","localStorage","getItem","maLichChieu","fire","deleteMovie","catch","addMovie","dataMovie","getInfoMovie","movieInfo","updateMovie","title","text","icon","confirmButtonColor","confirmButtonText","createShowTime","formCreate"],"mappings":"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","sourcesContent":["import Axios from 'axios'\r\nimport Swal from 'sweetalert2'\r\nimport { BOOKING_SUCCESS, CHANGE_CODE_CINEMA, GET_BANNER_LIST, GET_CINEMA_BY_CODE, GET_CINEMA_SYSTEM, GET_INFO_MOVIE, GET_MOVIES_LIST, GET_MOVIE_DETAILS, GET_SHOW_SCHEDULE, GET_TICKET_ROOM } from '../Const/MovieManagerConst'\r\nconst token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0ZW5Mb3AiOiJCb290Y2FtcCAxNSIsIkhldEhhblN0cmluZyI6IjIwLzA2LzIwMjIiLCJIZXRIYW5UaW1lIjoiMTY1NTY4MzIwMDAwMCIsIm5iZiI6MTYyNjI4MjAwMCwiZXhwIjoxNjU1ODMwODAwfQ.p47FFJpArherjwlM71xTzdulAQIW37pR6fRGD3t3Ji0'\r\nexport const getBannerList = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let result = await Axios({\r\n                url: 'https://movienew.cybersoft.edu.vn/api/QuanLyPhim/LayDanhSachBanner',\r\n                method: 'GET',\r\n                headers: {\r\n                    TokenCybersoft: token\r\n                }\r\n\r\n            })\r\n            dispatch({\r\n                type: GET_BANNER_LIST,\r\n                bannerList: result.data.content\r\n            })\r\n        } catch (err) {\r\n            console.log('Thất bại', err.response)\r\n        }\r\n    }\r\n}\r\nexport const getMovieList = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let result = await Axios({\r\n                url: 'https://movienew.cybersoft.edu.vn/api/QuanLyPhim/LayDanhSachPhim?maNhom=GP01',\r\n                method: 'GET',\r\n                headers: {\r\n                    TokenCybersoft: token\r\n                }\r\n            })\r\n            dispatch({\r\n                type: GET_MOVIES_LIST,\r\n                moviesList: result.data.content\r\n            })\r\n        } catch (error) {\r\n            console.log('Thất bại', error.response)\r\n        }\r\n    }\r\n}\r\nexport const getCinemaSystem = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let result = await Axios({\r\n                url: 'https://movienew.cybersoft.edu.vn/api/QuanLyRap/LayThongTinHeThongRap',\r\n                method: 'GET',\r\n                headers: {\r\n                    TokenCybersoft: token\r\n                }\r\n            })\r\n            dispatch({\r\n                type: GET_CINEMA_SYSTEM,\r\n                cinemaSystem: result.data.content\r\n            })\r\n        } catch (error) {\r\n            console.log('Thất bại', error.response)\r\n        }\r\n    }\r\n}\r\nexport const getTheTheaterClusterByCode = (code) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let result = await Axios({\r\n                url: `https://movienew.cybersoft.edu.vn/api/QuanLyRap/LayThongTinCumRapTheoHeThong?maHeThongRap=${code}`,\r\n                method: 'GET',\r\n                headers: {\r\n                    TokenCybersoft: token\r\n                }\r\n            })\r\n            dispatch({\r\n                type: GET_CINEMA_BY_CODE,\r\n                cinemaByCode: result.data.content\r\n            })\r\n        } catch (error) {\r\n            console.log('Thất bại', error.response)\r\n        }\r\n    }\r\n}\r\nexport const getShowSchedule = (code) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let result = await Axios({\r\n                url: `https://movienew.cybersoft.edu.vn/api/QuanLyRap/LayThongTinLichChieuHeThongRap?maHeThongRap=${code}&maNhom=GP01`,\r\n                method: 'GET',\r\n                headers: {\r\n                    TokenCybersoft: token\r\n                }\r\n            })\r\n            dispatch({\r\n                type: GET_SHOW_SCHEDULE,\r\n                showTimes: result.data.content\r\n            })\r\n        } catch (error) {\r\n            console.log('Thất bại', error.response)\r\n        }\r\n    }\r\n}\r\nexport const changeCodeCluster = (newCode) => {\r\n    return {\r\n        type: CHANGE_CODE_CINEMA,\r\n        newCode\r\n    }\r\n}\r\nexport const getMovieDetails = (movieCode) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            await Axios({\r\n                url: `https://movienew.cybersoft.edu.vn/api/QuanLyRap/LayThongTinLichChieuPhim?MaPhim=${movieCode}`,\r\n                method: 'GET',\r\n                headers: {\r\n                    TokenCybersoft: token\r\n                }\r\n            }).then((result) => {\r\n                dispatch({\r\n                    type: GET_MOVIE_DETAILS,\r\n                    movieDetails: result.data.content\r\n                })\r\n            })\r\n        } catch (error) {\r\n            console.log('Thất bại', error.response)\r\n\r\n        }\r\n    }\r\n}\r\nexport const getTicketRoom = (showtimeCode) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            await Axios({\r\n                url: `https://movienew.cybersoft.edu.vn/api/QuanLyDatVe/LayDanhSachPhongVe?MaLichChieu=${showtimeCode}`,\r\n                method: 'GET',\r\n                headers: {\r\n                    TokenCybersoft: token\r\n                }\r\n            }).then((result) => {\r\n                dispatch({\r\n                    type: GET_TICKET_ROOM,\r\n                    ticketRoom: result.data.content\r\n                })\r\n            })\r\n\r\n        } catch (error) {\r\n            console.log('Thất bại', error.response)\r\n        }\r\n    }\r\n}\r\nexport const bookTicketsAction = (tickets) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            await Axios({\r\n                url: 'https://movienew.cybersoft.edu.vn/api/QuanLyDatVe/DatVe',\r\n                method: 'POST',\r\n                data: tickets,\r\n                headers: {\r\n                    Authorization: 'Bearer ' + localStorage.getItem(\"ACCESSTOKEN\"),\r\n                    TokenCybersoft: token\r\n                }\r\n            }).then((result) => {\r\n                dispatch(getTicketRoom(tickets.maLichChieu))\r\n                Swal.fire('Thông báo', 'Đặt vé thành công', 'success')\r\n                dispatch({\r\n                    type: BOOKING_SUCCESS,\r\n                })\r\n            })\r\n        } catch (error) {\r\n            Swal.fire('Thông báo', 'Mua vé thất bại', 'error')\r\n        }\r\n    }\r\n}\r\nexport const deleteMovie = (movieCode) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            await Axios({\r\n                url: `https://movienew.cybersoft.edu.vn/api/QuanLyPhim/XoaPhim?MaPhim=${movieCode}`,\r\n                method: 'DELETE',\r\n                headers: {\r\n                    Authorization: 'Bearer ' + localStorage.getItem(\"ACCESSTOKEN\"),\r\n                    TokenCybersoft: token\r\n                }\r\n            }).then((result) => {\r\n                dispatch(getMovieList())\r\n                Swal.fire('Thông báo', 'Xóa thành công', 'success')\r\n            }).catch((error) => {\r\n                Swal.fire('Thông báo', 'Xóa thất bại', 'error')\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\nexport const addMovie = (dataMovie) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            await Axios({\r\n                url: 'https://movienew.cybersoft.edu.vn/api/QuanLyPhim/ThemPhimUploadHinh',\r\n                method: 'POST',\r\n                data: dataMovie,\r\n                headers: {\r\n                    TokenCybersoft: token\r\n                }\r\n            }).then((result) => {\r\n                dispatch(getMovieList())\r\n                Swal.fire('Thông báo', 'Thêm phim thành công', 'success')\r\n            })\r\n        } catch (err) {\r\n            console.log(err)\r\n            Swal.fire('Thông báo', 'Thêm phim thất bại', 'error')\r\n        }\r\n    }\r\n}\r\nexport const getInfoMovie = (movieCode) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            await Axios({\r\n                url: `https://movienew.cybersoft.edu.vn/api/QuanLyPhim/LayThongTinPhim?MaPhim=${movieCode}`,\r\n                method: 'GET',\r\n                headers: {\r\n                    TokenCybersoft: token\r\n                }\r\n            }).then((result) => {\r\n                dispatch({\r\n                    type: GET_INFO_MOVIE,\r\n                    movieInfo: result.data.content\r\n                })\r\n            })\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n}\r\nexport const updateMovie = (dataMovie) => {\r\n    return async () => {\r\n        try {\r\n            await Axios({\r\n                url: 'https://movienew.cybersoft.edu.vn/api/QuanLyPhim/CapNhatPhimUpload',\r\n                method: 'POST',\r\n                data: dataMovie,\r\n                headers: {\r\n                    Authorization: 'Bearer ' + localStorage.getItem(\"ACCESSTOKEN\"),\r\n                    TokenCybersoft: token\r\n                }\r\n            })\r\n            Swal.fire('Thông báo', 'Cập nhật thành công', 'success')\r\n        } catch (error) {\r\n            Swal.fire({\r\n                title: 'Cập nhật thất bại',\r\n                text: `${error}`,\r\n                icon: 'error',\r\n                confirmButtonColor: '#3085d6',\r\n                confirmButtonText: 'Ok',\r\n            })\r\n        }\r\n    }\r\n}\r\nexport const createShowTime = (formCreate) => {\r\n    return async () => {\r\n        try {\r\n            await Axios({\r\n                url: 'https://movienew.cybersoft.edu.vn/api/QuanLyDatVe/TaoLichChieu',\r\n                method: 'POST',\r\n                data: formCreate,\r\n                headers: {\r\n                    Authorization: 'Bearer ' + localStorage.getItem(\"ACCESSTOKEN\"),\r\n                    TokenCybersoft: token\r\n                }\r\n            })\r\n            Swal.fire('Thông báo', 'Tạo thành công', 'success')\r\n        } catch (err) {\r\n            console.log(err)\r\n            Swal.fire('Thông báo', 'Tạo thất bại', 'error')\r\n\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}